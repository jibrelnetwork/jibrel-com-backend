# Generated by Django 2.2.2 on 2019-12-23 09:50

import ccwt.core.db.fields
import ccwt.models.accounts.enum
import ccwt.models.assets.enum
import ccwt.models.fee.enum
import ccwt.models.transactions.enum
import ccwt.storages
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[(ccwt.models.accounts.enum.AccountType('normal'), 'Normal'), (ccwt.models.accounts.enum.AccountType('active'), 'Active'), (ccwt.models.accounts.enum.AccountType('passive'), 'Passive')], max_length=10)),
                ('strict', models.BooleanField()),
                ('references', django.contrib.postgres.fields.jsonb.JSONField(db_index=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[(ccwt.models.assets.enum.AssetType('fiat'), 'Fiat'), (ccwt.models.assets.enum.AssetType('crypto'), 'Cryptocurrency')], max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(db_index=True, max_length=10, unique=True)),
                ('country', models.CharField(max_length=2, null=True)),
                ('decimals', models.SmallIntegerField(default=6)),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('status', models.CharField(choices=[(ccwt.models.transactions.enum.OperationStatus('new'), 'New'), (ccwt.models.transactions.enum.OperationStatus('hold'), 'On hold'), (ccwt.models.transactions.enum.OperationStatus('committed'), 'Committed'), (ccwt.models.transactions.enum.OperationStatus('cancelled'), 'Cancelled'), (ccwt.models.transactions.enum.OperationStatus('deleted'), 'Deleted')], db_index=True, default=ccwt.models.transactions.enum.OperationStatus('new'), max_length=10)),
                ('type', models.CharField(choices=[(ccwt.models.transactions.enum.OperationType('deposit'), 'Deposit'), (ccwt.models.transactions.enum.OperationType('withdrawal'), 'Withdrawal'), (ccwt.models.transactions.enum.OperationType('buy'), 'Buy'), (ccwt.models.transactions.enum.OperationType('sell'), 'Sell'), (ccwt.models.transactions.enum.OperationType('correction'), 'Correction')], db_index=True, max_length=10)),
                ('description', models.TextField(default='')),
                ('references', django.contrib.postgres.fields.jsonb.JSONField(db_index=True, default=dict)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(db_index=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', ccwt.core.db.fields.DecimalField(decimal_places=6, max_digits=16)),
                ('references', django.contrib.postgres.fields.jsonb.JSONField(db_index=True, default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Account')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='ccwt.Operation')),
            ],
        ),
        migrations.CreateModel(
            name='RoundingUserAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationConfirmationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=ccwt.storages.AmazonS3Storage(location='operations'), upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Operation')),
            ],
        ),
        migrations.CreateModel(
            name='FeeUserAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[(ccwt.models.fee.enum.FeeOperationType('withdrawal_crypto'), 'Withdrawal crypto'), (ccwt.models.fee.enum.FeeOperationType('withdrawal_bank_account'), 'Withdrawal bank account'), (ccwt.models.fee.enum.FeeOperationType('deposit_crypto'), 'Deposit crypto'), (ccwt.models.fee.enum.FeeOperationType('deposit_bank_account'), 'Deposit bank account'), (ccwt.models.fee.enum.FeeOperationType('deposit_card'), 'Deposit card')], max_length=30)),
                ('value_type', models.CharField(choices=[(ccwt.models.fee.enum.FeeValueType('constant'), 'Constant'), (ccwt.models.fee.enum.FeeValueType('percentage'), 'Percentage')], max_length=30)),
                ('value', models.DecimalField(decimal_places=6, max_digits=16)),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ccwt.Asset')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeUserAccount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ccwt.Asset'),
        ),
        migrations.CreateModel(
            name='PaymentOperation',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ccwt.operation',),
        ),
        migrations.AddConstraint(
            model_name='fee',
            constraint=models.UniqueConstraint(fields=('asset', 'operation_type'), name='unique_asset_and_operation_type'),
        ),
    ]
